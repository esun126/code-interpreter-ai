version: '3.8'

services:
  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./data:/data
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - postgres
    networks:
      - code-interpreter-network

  # Celery Worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery_worker.celery_app worker --loglevel=info
    volumes:
      - ./data:/data
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - postgres
      - backend
    networks:
      - code-interpreter-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - code-interpreter-network

  # Redis (用于Celery)
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - code-interpreter-network

  # PostgreSQL数据库
  postgres:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=codeinterpreter
      - POSTGRES_PASSWORD=codeinterpreter
      - POSTGRES_DB=codeinterpreter
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - code-interpreter-network

volumes:
  redis-data:
  postgres-data:
  
networks:
  code-interpreter-network:
    driver: bridge

# PROMPT_SEGMENT_9_COMPLETE
